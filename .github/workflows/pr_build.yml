# 可选，将显示在 GitHub 存储库的“操作”选项卡中的工作流名称
name: Pr build

# 指定此工作流的触发器
on:
  push:
  pull_request:

# 需要运行的作业组合
jobs:
  build-app:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, ubuntu-20.04, macos-12, macos-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        # 如果您不使用系统托盘功能，可以删除libayatana-appindicator 3-dev。
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 适用于 Tauri v1，webkitgtk 4.1 适用于 Tauriv2
        # 您可以删除不适用于您的应用程序的选项，以稍微加快工作流程

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Build the app
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          NO_STRIP: true
        run: pnpm tauri build


      - name: Upload artifacts (Windows)
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: |
            src-tauri/target/debug/bundle/msi/*.msi
            src-tauri/target/debug/bundle/nsis/*.exe
          retention-days: 5 # 保留天数
          compression-level: 0 # 压缩级别 0-9 (0 为无压缩)

      - name: Upload artifacts (MacOS)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform == 'macos-latest' && 'macos-aarch64' || 'macos-x86_64' }}
          path: src-tauri/target/debug/bundle/dmg/*.dmg
          retention-days: 5
          compression-level: 0

      - name: Upload artifacts (Linux)
        if: matrix.platform == 'ubuntu-20.04'
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: |
            src-tauri/target/debug/bundle/deb/*.deb
            src-tauri/target/debug/bundle/rpm/*.rpm
            src-tauri/target/debug/bundle/appimage/*.AppImage
          retention-days: 5
          compression-level: 0
